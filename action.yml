name: 'Get Changelog'
description: 'Get the section of changelog.md corresponding to the version in Project.toml.'
inputs:
  dir0:  # id of input
    description: 'Path to your local registry'
    required: false
    default: './'

runs:
  using: "composite"
  steps:
    - run: |
        echo "text=$(julia --project=@. -e '
          dir0 = "${{ inputs.dir0 }}";
          dir_proj = joinpath(dir0, "Project.toml");
          dir_cglog = joinpath(dir0, "changelog.md");
          using Pkg;
          Pkg.add([Pkg.PackageSpec(;name="OkExpressions", version="0.1.5"), Pkg.PackageSpec(;name="OkMD", version="0.2.2")]);
          using OkMD, OkExpressions;
          cglog = try;
            OkMD.plain_string(OkMD.get_changelog(dir_proj, dir_cglog, 2; with_header=false)); 
          catch e; 
            "changelog.md not available"; 
          end;
          print_raw(cglog);
        ')"  >> $GITHUB_OUTPUT
        echo "version=$(julia --project=@. -e '
          using Pkg;
          Pkg.add("TOML");
          using TOML;
          ver = try;
            d = TOML.parsefile(dir_proj); 
            d["version"];
          catch e; 
            "Version number not available"; 
          end;
          print(ver);
        ')" >> $GITHUB_OUTPUT
      id: projinfo
      shell: bash
branding:
  icon: "package"
  color: "gray"
  version: "v1.0.0"  
# This actions is created referring https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# Tag is required for it is able to be used.